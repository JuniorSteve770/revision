/* mecanismes des differents march√©es swpa et ses jambes et contenu des jambes et jours de settlement
/*



/* - /*
Reformulation 1 ‚Äì Style concis et structur√© :
Voici une liste de flashcards. Je souhaite que tu les regroupes deux par deux, en combinant les questions et les r√©ponses tout en respectant le format "question-r√©ponse".
Merci de r√©duire la longueur des phrases dans les r√©ponses, tout en mettant en valeur les mots-cl√©s essentiels.
Organise les flashcards par th√©matiques proches sans en supprimer aucune.


‚úçÔ∏è Reformulation 2 ‚Äì Style plus p√©dagogique et clair :
Je vais te fournir une s√©rie de flashcards. Ta mission :
Regroupe-les 2 par 2 en fusionnant les questions ensemble, puis les r√©ponses ensemble.
R√©√©cris les r√©ponses pour qu‚Äôelles soient plus courtes, plus claires, et riches en mots-cl√©s pour faciliter la m√©morisation.
Regroupe les cartes par logique ou th√®me similaire, mais ne supprime aucune information.
L‚Äôobjectif est d‚Äôavoir un ensemble de flashcards plus compact, plus clair, et optimis√© pour r√©viser efficacement.

#############Youtube TXT
Extraction des concepts fondamentaux
Objectif : Identifier et organiser les id√©es principales, les paradigmes ou les m√©thodologies abord√©s.
Prompt :
"√Ä partir de mes notes sur la conf√©rence de programmation en amont , extrais et structure les concepts fondamentaux mentionn√©s (ex : langages, frameworks, bonnes pratiques, architectures).
Th√®mes majeurs : [liste]
D√©finitions cl√©s : [termes + explications concises]
Outils/Technologies : [noms + cas d'usage]
Citations importantes : [si relev√©]
Priorise les √©l√©ments r√©currents ou pr√©sent√©s comme essentiels par l'intervenant."

########### 
ETAPES
###########
 üîπ Prompt 1 ‚Äì Pr√©sentation structur√©e compl√®te d‚Äôun concept
 Fais-moi une pr√©sentation d√©taill√©e et structur√©e sur le sujet suivant : [ins√©rer le th√®me, ex : les 4 principes de la programmation orient√©e objet].  
Inclue : d√©finitions, objectifs, types ou sous-cat√©gories, exemples concrets (ex : code C# ou sch√©ma), comparaisons, et m√©taphores p√©dagogiques si possible.

 üîπ Prompt 2 ‚Äì G√©n√©rer des flashcards compl√®tes √† partir d‚Äôun contenu
 √Ä utiliser apr√®s une pr√©sentation pour transformer en cartes d‚Äôapprentissage


G√©n√®re un ensemble de flashcards √† partir du contenu pr√©c√©dent.  
Format : JSON, avec pour chaque carte une question concise et une r√©ponse claire, contenant des mots-cl√©s, exemples et explications.  
Exemple de structure JSON :  
{  
  "question": "‚Ä¶",  
  "answer": "‚Ä¶"  
}

üîπ Prompt 3 ‚Äì Fusionner et condenser les flashcards par 2
üîÅ Pour obtenir des flashcards optimis√©es et compactes

Regroupe les flashcards 2 par 2 en fusionnant les questions et les r√©ponses.  
R√©duis la formulation, clarifie le contenu, mets en valeur les mots-cl√©s et garde les exemples essentiels.  
Classe les paires par logique ou proximit√© th√©matique.
Format : JSON identique √† avant.

 üîπ Prompt 5 ‚Äì G√©n√©rer des QCM √† partir de flashcards
üîÅ Pour s'entra√Æner ou cr√©er un quiz

√Ä partir des flashcards pr√©c√©dentes, g√©n√®re 10 QCM essentiels en format JSON.  
Chaque QCM doit inclure :  
- Une question claire  
- 4 options  
- Une bonne r√©ponse  
- Une explication p√©dagogique

Structure attendue :  
{  
  "question": "...",  
  "options": ["A", "B", "C", "D"],  
  "answer": "B",  
  "explanation": "..."  
}
  voici un exple 
    {
    "question": "Quelle attitude adopter face √† un trader qui exige une solution imm√©diate alors que la DSI pr√©voit un d√©lai ?",
    "options": [
      "Promettre une r√©solution rapide sans validation",
      "Proposer une solution interm√©diaire et alerter la DSI",
      "Ignorer la demande du trader",
      "Transf√©rer la demande √† un autre BA"
    ],
    "answer": "Proposer une solution interm√©diaire et alerter la DSI",
    "explanation": "Le BA doit g√©rer la pression en proposant un workaround, en maintenant une communication claire, et en impliquant rapidement la DSI."
  }
    ###########################

üîπ Prompt 6 ‚Äì G√©n√©rer des QCM avec du code source int√©gr√©
üîÅ Pour les entretiens techniques ou tests d‚Äôanalyse

G√©n√®re des QCM avec du code source int√©gr√© dans la question.  
Utilise des extraits courts en C# (ou autre langage) dans un bloc ```markdown``` et pose des questions sur le comportement, la sortie, ou la conformit√© avec un principe (POO, SOLID, design pattern‚Ä¶).

Format JSON attendu :
{
  "question": "...\n```csharp\n// code ici\n```",
  "options": ["..."],
  "answer": "...",
  "explanation": "..."
}

üîπ Prompt 7 ‚Äì G√©n√©rer un mix th√©matique de QCM avec code
üîÅ Pour croiser plusieurs th√®mes (POO + SOLID + Design patterns, etc.)

G√©n√®re 2 QCM avec du code sur le th√®me [ex : SOLID] et 2 autres sur [ex : les design patterns], en respectant le format JSON QCM avec explication.
Utilise des exemples concrets et pertinents pour un niveau entretien ou confirm√©.
*/