// src/projects/Project2/pages/Page2.js

import React, { useState, useEffect } from "react";
import "./Page.css";
// partie 
// Flashcards pour le niveau basic

const basicSlides = [
  {
    "question": "Comment r√©f√©rencer une feuille et d√©tecter dynamiquement la derni√®re ligne ?",
    "answer": "‚û°Ô∏è Utilise `Set ws = Sheets(\"NomFeuille\")` pour manipuler une feuille sp√©cifique. \n‚û°Ô∏è Pour trouver la derni√®re cellule remplie : `ws.Cells(ws.Rows.Count, 1).End(xlUp).Row`. \nüìå **Mots-cl√©s** : Set, Sheets, xlUp, dynamique. \nüìé **Exemple** : `Set baseWs = Sheets(\"Base\")`, `lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row`. \n‚ö†Ô∏è **Erreur √† √©viter** : `.End(xlDown)` saute les cellules vides."
  },
  {
    "question": "Comment cr√©er une collection sans doublon et nommer une feuille dynamiquement ?",
    "answer": "‚û°Ô∏è Cr√©e une `Collection` avec `On Error Resume Next` + `CStr(val)` comme cl√© : √©vite les doublons. \n‚û°Ô∏è Nomme la feuille avec `Left(\"Client_\" & client, 31)` pour respecter la limite Excel. \nüìå **Mots-cl√©s** : Collection, unicit√©, nom de feuille, Left. \nüìé **Exemple** : `uniqueClients.Add cell.Value, CStr(cell.Value)`, `reportWs.Name = Left(\"Client_\" & client, 31)`."
  },
  {
    "question": "Comment filtrer des donn√©es par crit√®re et copier les lignes correspondantes ?",
    "answer": "‚û°Ô∏è Parcours les cellules avec `For Each`, filtre avec `If cell.Value = critere` et copie la ligne : `cell.EntireRow.Copy Destination:=...`. \nüìå **Mots-cl√©s** : boucle, filtre manuel, EntireRow, Destination. \nüìé **Exemple** : `If cell.Value = client Then cell.EntireRow.Copy Destination:=reportWs.Cells(..., 1)`. \n‚ö†Ô∏è **Attention** √† bien g√©rer la ligne de destination (√©vite les doublons ou vides)."
  },
  {
    "question": "Comment ins√©rer un logo et ajuster sa position dans une feuille Excel ?",
    "answer": "‚û°Ô∏è Utilise `Pictures.Insert(path).Select`, puis ajuste via `.ShapeRange.Left`, `.Top`, `.Height`. \nüìå **Mots-cl√©s** : image, ShapeRange, position. \nüìé **Exemple** : `reportWs.Pictures.Insert(\"C:\\logo.png\")`, `.Left = Range(\"F1\").Left`, `.Height = 40`. \n‚ö†Ô∏è Le fichier image doit exister au chemin indiqu√©."
  },
  {
    "question": "Comment configurer une mise en page propre pour l'impression ?",
    "answer": "‚û°Ô∏è Utilise `.PageSetup` avec `.Orientation`, `.Zoom = False`, `.FitToPagesWide = 1`. \nüìå **Mots-cl√©s** : PageSetup, impression, FitToPage. \nüìé **Exemple** : `With ws.PageSetup ... End With`. \n‚ö†Ô∏è N‚Äôoublie pas de d√©sactiver `Zoom` pour que les options d‚Äôajustement s‚Äôappliquent."
  },
  {
    "question": "Comment informer l'utilisateur √† la fin de l'ex√©cution d'une macro ?",
    "answer": "‚û°Ô∏è Utilise `MsgBox \"Texte\", vbInformation` pour confirmer la r√©ussite ou notifier un √©tat. \nüìå **Mots-cl√©s** : MsgBox, feedback, utilisateur. \nüìé **Exemple** : `MsgBox \"Reportings g√©n√©r√©s avec succ√®s !\"`. \n‚ö†Ô∏è Ajoute une ic√¥ne (`vbInformation`) pour une interface plus claire."
  },
 {
    "question": "Comment r√©f√©rencer une feuille et d√©tecter la derni√®re ligne non vide ?",
    "answer": "**R√©f√©rencer** : `Set ws = Sheets(\"NomFeuille\")` permet de manipuler une feuille existante. \n**Derni√®re ligne** : `Cells(Rows.Count, 1).End(xlUp).Row` trouve la derni√®re cellule remplie d‚Äôune colonne. \nMots-cl√©s : `Set`, `Sheets`, `xlUp`, dynamique. \nExemple : `Set baseWs = Sheets(\"Base\")` / `lastRow = ws.Cells(Rows.Count, 1).End(xlUp).Row`."
  },
  {
    "question": "Comment cr√©er une collection unique et g√©n√©rer une feuille avec nom dynamique ?",
    "answer": "**Collection unique** : `uniqueClients.Add val, CStr(val)` + `On Error Resume Next` √©vite les doublons. \n**Nom dynamique** : `reportWs.Name = Left(\"Client_\" & client, 31)` limite √† 31 caract√®res. \nMots-cl√©s : `Collection`, `unicit√©`, `gestion d'erreur`, `nom de feuille`. \nExemple : `Sheets.Add`, `CStr(val)`."
  },
  {
    "question": "Comment filtrer manuellement et copier des lignes selon un crit√®re ?",
    "answer": "Boucle sur les cellules : `If cell.Value = critere Then cell.EntireRow.Copy Destination:=...`. \nMots-cl√©s : `filtrage`, `boucle`, `EntireRow`, `Destination`. \nExemple : copie uniquement les lignes du client s√©lectionn√©."
  },
  {
    "question": "Comment ins√©rer une image avec positionnement personnalis√© ?",
    "answer": "Utilise `Pictures.Insert(path).Select`, puis ajuste via `.ShapeRange`. \nMots-cl√©s : `insertion image`, `ShapeRange`, `positionnement`. \nExemple : `.Left = Range(\"F1\").Left`, `.Height = 40`."
  },
  {
    "question": "Comment configurer la mise en page pour impression ?",
    "answer": "Utilise `PageSetup` avec `.Orientation = xlPortrait`, `.Zoom = False`, `.FitToPagesWide = 1`. \nMots-cl√©s : `mise en page`, `impression`, `FitToPages`. \nExemple : une page de large, plusieurs pages de haut possibles."
  },
  {
    "question": "Comment afficher un message de confirmation en fin de macro ?",
    "answer": "Utilise `MsgBox \"Texte\", vbInformation`. \nMots-cl√©s : `MsgBox`, `interface utilisateur`, `feedback`. \nExemple : `MsgBox \"Reportings g√©n√©r√©s avec succ√®s !\"` informe l'utilisateur."
  },

{
    "question": "Comment v√©rifier une s√©lection ET it√©rer sur les cellules en VBA ?",
    "answer": "1. V√©rification : `TypeName(Selection) <> \"Range\"` (Mots-cl√©s : **TypeName, validation**)\n2. It√©ration : `For Each cell In plage` (Mots-cl√©s : **boucle, Range**)"
  },
  {
    "question": "Comment g√©rer un tableau dynamique ET v√©rifier les valeurs num√©riques ?",
    "answer": "1. Tableau : `ReDim valeurs(1 To N)` / `ReDim Preserve` pour conserver (Mots-cl√©s : **redimensionnement, tableau**)\n2. V√©rification : `IsNumeric(cell.Value) And Not IsEmpty(cell.Value)` (Mots-cl√©s : **validation, num√©rique**)"
  },
  {
    "question": "Quelles fonctions statistiques utiliser ET comment impl√©menter la coloration ?",
    "answer": "1. Stats : `Application.WorksheetFunction.Average/Median/Min/Max` (Ex: `moyenne = Average(valeurs)`)\n2. Coloration : `Select Case True` avec `Interior.Color` (Ex: `vbGreen` si > moyenne)"
  },
  {
    "question": "Comment d√©clarer une subroutine ET quitter pr√©matur√©ment ?",
    "answer": "1. D√©claration : `Sub NomMacro()` (Mots-cl√©s : **d√©but de macro**)\n2. Sortie : `Exit Sub` pour interruption (Mots-cl√©s : **contr√¥le de flux**)"
  },
  {
    "question": "Quels types de donn√©es utiliser ET comment afficher des messages ?",
    "answer": "1. Types : `Range` (cellules), `Double` (d√©cimaux), `Long` (entiers)\n2. Messages : `MsgBox \"Texte\", vbInformation` (Mots-cl√©s : **interface utilisateur**)"
  },
  {
    "question": "Comment initialiser une feuille Excel et trouver la derni√®re ligne utilis√©e en VBA ?",
    "answer": "Syntaxe : `Set ws = Sheets(\"NomFeuille\")` et `lastRow = ws.Cells(ws.Rows.Count, \"A\").End(xlUp).Row`\nMots-cl√©s : R√©f√©rence de feuille, xlUp, dynamique\nExemple : Trouve la derni√®re ligne non-vide de la colonne A"
  },
  {
    "question": "Quelle m√©thode utiliser pour collecter des crit√®res utilisateurs avec gestion des champs vides ?",
    "answer": "Syntaxe : `InputBox()` avec v√©rification de cha√Æne vide\nMots-cl√©s : Interaction utilisateur, validation\nExemple : `nomCritere = InputBox(\"Entrez un nom\")` puis `IIf(nomCritere <> \"\", crit√®re, \"\")`"
  },
  {
    "question": "Comment impl√©menter un filtre automatique avec crit√®res partiels et dates en VBA ?",
    "answer": "Syntaxe : `.AutoFilter Field:=n, Criteria1:=\"*texte*\"` pour partiel ou date exacte\nMots-cl√©s : AutoFilter, joker (*), IIf\nExemple : Filtre colonne 1 sur nom partiel : `\"*\" & nomCritere & \"*\"`"
  },
  {
    "question": "Quelle technique permet de copier uniquement les r√©sultats filtr√©s vers une nouvelle feuille ?",
    "answer": "Syntaxe : `.SpecialCells(xlCellTypeVisible).Copy`\nMots-cl√©s : Cellules visibles, copie filtr√©e\nExemple : Copie uniquement les lignes filtr√©es vers nouvelle feuille"
  },
  {
    "question": "Comment cr√©er dynamiquement une feuille de r√©sultats avec horodatage unique ?",
    "answer": "Syntaxe : `Sheets.Add` + `Format(Now, \"yyyymmdd_hhnnss\")`\nMots-cl√©s : Horodatage, nom unique\nExemple : `wsResult.Name = \"R√©sultats_20240510_143022\"`"
  },
  {
    "question": "Quelle structure VBA optimise la gestion des plages filtr√©es ?",
    "answer": "Bloc `With` pour √©viter les r√©p√©titions\nMots-cl√©s : With-End With, optimisation\nExemple : Applique multiples filtres sur m√™me plage sans r√©p√©ter la r√©f√©rence"
  },
  {
    "question": "Comment r√©initialiser proprement des filtres existants en VBA ?",
    "answer": "Syntaxe : `If ws.AutoFilterMode Then ws.AutoFilterMode = False`\nMots-cl√©s : Nettoyage, r√©initialisation\nExemple : Supprime tout filtre actif avant nouvelle application"
  },
  {
    "question": "Comment notifier l'utilisateur avec le nom exact de la feuille r√©sultat ?",
    "answer": "Syntaxe : `MsgBox` avec concat√©nation de `ws.Name`\nMots-cl√©s : Feedback utilisateur, communication\nExemple : Affiche \"R√©sultats dans 'Feuille1'\""
  },
  {
    "question": "Quel op√©rateur permet de g√©rer conditionnellement des crit√®res vides ?",
    "answer": "Fonction `IIf(condition, si_vrai, si_faux)`\nMots-cl√©s : Condition inline, ternaire\nExemple : `Criteria1:=IIf(critere=\"\", \"*\", critere)`"
  },
  {
    "question": "Pourquoi utiliser un horodatage dans le nom des feuilles r√©sultats ?",
    "answer": "Avantages : √âvite les conflits de noms, tra√ßabilit√©\nFormat : AAAAMMJJ_HHMMSS\nExemple : \"Resultats_20240510_150045\" pour 15:00:45 le 10/05/2024"
  },
  {
    "question": "Comment d√©tecter dynamiquement la plage source pour un TCD en VBA ?",
    "answer": "Utilise `lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row` et `lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column`. Mots-cl√©s : xlUp, xlToLeft, plage dynamique. Exemple : Trouve la derni√®re ligne/colonne utilis√©e dans la feuille 'Base'."
  },
  {
    "question": "Comment cr√©er un cache de donn√©es pour un TCD ?",
    "answer": "Utilise `Set pc = ThisWorkbook.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=plage)`. Mots-cl√©s : PivotCache, xlDatabase. Exemple : Cr√©e un cache sur une plage d√©finie automatiquement."
  },
  {
    "question": "Comment affecter les champs √† un TCD (ligne, colonne, valeur) ?",
    "answer": "Utilise `.PivotFields(\"X\").Orientation = xlRowField/xlColumnField/xlDataField`. Mots-cl√©s : Orientation, PivotFields. Exemple : `.PivotFields(\"Montant\").Function = xlSum` pour sommer les montants."
  },
  {
    "question": "Quelle structure VBA simplifie la configuration d‚Äôun TCD ?",
    "answer": "Utilise `With pt ... End With` pour regrouper les r√©glages. Mots-cl√©s : With-End With, PivotTable. Exemple : Permet d'ajuster tous les param√®tres du TCD dans un bloc unique."
  },
  {
    "question": "Comment cr√©er une feuille de r√©sultats horodat√©e ?",
    "answer": "Utilise `Sheets.Add` + `Format(Now, \"yyyymmdd_hhnnss\")`. Mots-cl√©s : Horodatage, nom unique. Exemple : Nom de feuille g√©n√©r√© automatiquement comme \"TCD_20240510_143022\"."
  },
  {
    "question": "Comment r√©cup√©rer les champs du TCD via l'utilisateur ?",
    "answer": "Utilise `InputBox` pour demander chaque champ. Mots-cl√©s : Interaction utilisateur. Exemple : `champLigne = InputBox(\"Champ de ligne\")` permet une saisie manuelle."
  },
  {
    "question": "Comment d√©finir la position du TCD dans une feuille ?",
    "answer": "Utilise `CreatePivotTable TableDestination:=ws.Range(\"A3\")`. Mots-cl√©s : Ancrage, positionnement. Exemple : Le TCD commence en cellule A3 de la feuille r√©sultat."
  },
  {
    "question": "Comment appliquer une fonction d‚Äôagr√©gation dans un TCD ?",
    "answer": "Utilise `.PivotFields(\"X\").Function = xlSum/xlCount/xlAverage`. Mots-cl√©s : Agr√©gation, fonction. Exemple : `xlSum` additionne les montants dans le champ de valeur."
  },
];
// QCM pour les niveaux moyen et avanc√©
const questions = {
  moyen: [
   {
    "question": "Quelle instruction permet de d√©tecter la derni√®re ligne non vide dans une colonne ?",
    "options": [
      "Cells(1, 1).End(xlDown).Row",
      "Cells(Rows.Count, 1).End(xlUp).Row",
      "Rows(1).End(xlToLeft).Row",
      "Columns(1).End(xlUp).Row"
    ],
    "answer": "B",
    "explanation": "`Cells(Rows.Count, 1).End(xlUp).Row` remonte depuis le bas de la colonne pour trouver la derni√®re cellule non vide."
  },
  {
    "question": "Quelle m√©thode permet de cr√©er un cache de donn√©es pour un TCD ?",
    "options": [
      "CreateObject(\"Pivot.Cache\")",
      "ThisWorkbook.PivotCaches.Create(...)",
      "Sheets(\"Feuille\").PivotTable.CreateCache(...)",
      "New PivotCache()"
    ],
    "answer": "B",
    "explanation": "`ThisWorkbook.PivotCaches.Create` est la m√©thode standard pour cr√©er un cache de donn√©es avant d'initialiser un TCD."
  },
  {
    "question": "Quel mot-cl√© VBA emp√™che l‚Äôarr√™t du code en cas d‚Äôerreur ?",
    "options": [
      "Stop On Error",
      "Resume Error",
      "On Error Resume Next",
      "Try Catch"
    ],
    "answer": "C",
    "explanation": "`On Error Resume Next` permet d‚Äôignorer les erreurs et de continuer l‚Äôex√©cution, utile pour les ajouts uniques dans une Collection."
  },
  {
    "question": "Comment ins√©rer une image dans une feuille Excel ?",
    "options": [
      "InsertImage()",
      "Shape.Insert()",
      "Pictures.Insert(path)",
      "Range.AddImage(path)"
    ],
    "answer": "C",
    "explanation": "`Pictures.Insert(path)` est la m√©thode utilis√©e pour ins√©rer une image √† partir d‚Äôun chemin local."
  },
  {
    "question": "Quelle propri√©t√© permet d‚Äôappliquer une fonction de somme sur un champ de TCD ?",
    "options": [
      ".Orientation = xlSum",
      ".Function = xlSum",
      ".AddField(\"Somme\")",
      ".Calculation = xlSum"
    ],
    "answer": "B",
    "explanation": "On utilise `.Function = xlSum` sur un champ d√©fini comme `xlDataField` pour agr√©ger les valeurs."
  },
  {
    "question": "Quel format de date garantit un nom de feuille unique avec horodatage ?",
    "options": [
      "Now()",
      "Format(Now, \"ddmmyyyy\")",
      "Format(Now, \"yyyymmdd_hhnnss\")",
      "Date & Time"
    ],
    "answer": "C",
    "explanation": "`Format(Now, \"yyyymmdd_hhnnss\")` garantit un nom unique et triable selon l‚Äôordre chronologique."
  },
  {
    "question": "Quelle syntaxe permet d‚Äôit√©rer sur une plage de cellules ?",
    "options": [
      "While cell in Range",
      "For Each cell In plage",
      "Each cell Do",
      "Loop cell from plage"
    ],
    "answer": "B",
    "explanation": "`For Each cell In plage` est la syntaxe correcte pour boucler sur chaque cellule d'une plage d√©finie."
  },
  {
    "question": "Quelle fonction teste si une cellule contient un nombre ?",
    "options": [
      "IsValue(cell)",
      "IsNumber(cell)",
      "IsNumeric(cell.Value)",
      "IsDigit(cell)"
    ],
    "answer": "C",
    "explanation": "`IsNumeric(cell.Value)` retourne True si la cellule contient un nombre valide."
  },
  {
    "question": "Quelle structure VBA est utilis√©e pour √©viter de r√©p√©ter un objet dans un bloc ?",
    "options": [
      "If...Then",
      "Do...Loop",
      "With...End With",
      "For...Each"
    ],
    "answer": "C",
    "explanation": "`With...End With` permet de r√©f√©rencer un objet une seule fois et d‚Äôy appliquer plusieurs propri√©t√©s ou m√©thodes."
  },
  {
    "question": "Quel mot-cl√© permet de quitter une Sub pr√©matur√©ment ?",
    "options": [
      "Stop",
      "Exit Sub",
      "Return",
      "End"
    ],
    "answer": "B",
    "explanation": "`Exit Sub` arr√™te imm√©diatement l‚Äôex√©cution d‚Äôune subroutine sans aller jusqu‚Äô√† la fin du bloc."
  },
  {
    "question": "Quelle fonction permet de collecter un crit√®re depuis l‚Äôutilisateur ?",
    "options": [
      "Input()",
      "MsgBox()",
      "InputBox()",
      "ReadLine()"
    ],
    "answer": "C",
    "explanation": "`InputBox()` affiche une bo√Æte de saisie √† l‚Äôutilisateur et retourne la valeur saisie."
  },
  {
    "question": "Quel op√©rateur permet une condition courte dans une seule ligne ?",
    "options": [
      "IIf()",
      "If Then",
      "Switch()",
      "Select Case"
    ],
    "answer": "A",
    "explanation": "`IIf(condition, vrai, faux)` agit comme un op√©rateur ternaire pour des expressions rapides."
  },
  {
    "question": "Quelle m√©thode permet de copier uniquement les lignes visibles d‚Äôun filtre ?",
    "options": [
      ".Copy",
      ".RangeVisible.Copy",
      ".SpecialCells(xlCellTypeVisible).Copy",
      ".Filter.CopyVisible"
    ],
    "answer": "C",
    "explanation": "`SpecialCells(xlCellTypeVisible)` cible uniquement les lignes visibles apr√®s un filtre automatique."
  },
  {
    "question": "Quel objet VBA permet de contenir des √©l√©ments uniques ?",
    "options": [
      "Array",
      "Collection",
      "List",
      "Dictionary"
    ],
    "answer": "B",
    "explanation": "Une `Collection` peut contenir des valeurs uniques si une cl√© (`CStr(val)`) est utilis√©e pour √©viter les doublons."
  },
  {
    "question": "Comment √©viter un filtre actif avant de relancer un nouveau filtre ?",
    "options": [
      "Filter.Clear()",
      "ws.Filters.Reset()",
      "If ws.AutoFilterMode Then ws.AutoFilterMode = False",
      "Range.Unfilter()"
    ],
    "answer": "C",
    "explanation": "La condition `If ws.AutoFilterMode Then ws.AutoFilterMode = False` supprime tout filtre actif avant d‚Äôen appliquer un nouveau."
  },
  {
    "question": "Pourquoi limiter un nom de feuille √† 31 caract√®res en VBA ?",
    "options": [
      "Pour am√©liorer la lisibilit√© du code",
      "Parce qu'Excel refuse tout nom de feuille de plus de 31 caract√®res",
      "Pour √©viter les erreurs de compilation",
      "Parce que les macros ne reconnaissent que les 31 premiers caract√®res"
    ],
    "answer": "B",
    "explanation": "Excel impose une limite stricte de 31 caract√®res pour le nom des feuilles. D√©passer cette limite g√©n√®re une erreur √† l‚Äôex√©cution."
  },
  {
    "question": "Quel est l‚Äôint√©r√™t de copier uniquement les lignes visibles d‚Äôun filtre ?",
    "options": [
      "Pour √©viter les erreurs de format",
      "Pour acc√©l√©rer la macro",
      "Pour ne pas copier les lignes masqu√©es par le filtre",
      "Pour trier automatiquement les donn√©es"
    ],
    "answer": "C",
    "explanation": "Seules les lignes visibles repr√©sentent les r√©sultats pertinents du filtre. Copier tout inclurait les lignes cach√©es, ce qui fausserait l‚Äôanalyse."
  },
  {
    "question": "Dans quel cas utiliser `InputBox()` est pr√©f√©rable √† un champ de saisie manuel ?",
    "options": [
      "Lorsque l'utilisateur doit s√©lectionner une cellule",
      "Lorsque la saisie utilisateur est obligatoire dans une boucle automatique",
      "Lorsque tu veux √©viter d‚Äôouvrir une feuille sp√©cifique",
      "Lorsque tu veux collecter un crit√®re rapidement sans interface graphique complexe"
    ],
    "answer": "D",
    "explanation": "`InputBox()` est id√©al pour demander une valeur ponctuelle, comme un nom ou une date, sans interface lourde ni formulaire personnalis√©."
  },
  {
    "question": "Pourquoi utiliser `With...End With` dans une macro VBA ?",
    "options": [
      "Pour tester une condition sur plusieurs lignes",
      "Pour initialiser plusieurs objets √† la fois",
      "Pour appliquer plusieurs instructions sur un m√™me objet sans le r√©p√©ter",
      "Pour optimiser les boucles imbriqu√©es"
    ],
    "answer": "C",
    "explanation": "`With...End With` √©vite de r√©p√©ter l‚Äôobjet √† chaque ligne, ce qui am√©liore la lisibilit√© et les performances du code."
  },
  {
    "question": "Quelle est la meilleure mani√®re de structurer une macro de reporting pour plusieurs clients ?",
    "options": [
      "Faire un copier-coller manuel pour chaque feuille",
      "Cr√©er une feuille vide et utiliser des formules Excel",
      "Parcourir les clients et g√©n√©rer dynamiquement les feuilles avec filtre et copie",
      "Utiliser une boucle Do Until avec une bo√Æte de message"
    ],
    "answer": "C",
    "explanation": "L‚Äôapproche dynamique avec boucle, filtre et copie permet d‚Äôautomatiser totalement la g√©n√©ration de rapports personnalis√©s, sans intervention manuelle."
  }
  ],
  avance: [
    {
    "question": "Quel code permet de copier uniquement les lignes visibles apr√®s un filtre automatique ?",
    "options": [
      "plage.Copy",
      "plage.SpecialCells(xlCellTypeVisible).Copy",
      "plage.Rows.Hidden = False",
      "plage.VisibleCells.Copy"
    ],
    "answer": "B",
    "explanation": "`SpecialCells(xlCellTypeVisible)` cible uniquement les lignes visibles ‚Äî c‚Äôest la m√©thode correcte apr√®s filtrage."
  },
  {
    "question": "Quel code permet de r√©cup√©rer la derni√®re ligne non vide dans la colonne A ?",
    "options": [
      "ws.Range(\"A1\").End(xlDown).Row",
      "ws.Range(\"A:A\").Rows.Count",
      "ws.Cells(Rows.Count, 1).End(xlUp).Row",
      "ws.Columns(\"A\").End(xlDown).Row"
    ],
    "answer": "C",
    "explanation": "`Cells(Rows.Count, 1).End(xlUp).Row` remonte depuis le bas de la colonne pour trouver la derni√®re cellule utilis√©e."
  },
  {
    "question": "Quel code permet de g√©n√©rer un nom de feuille avec date et heure ?",
    "options": [
      "Sheets.Add.Name = Date()",
      "ws.Name = Time()",
      "ws.Name = Format(Now, \"dd-mm-yyyy\")",
      "ws.Name = Format(Now, \"yyyymmdd_hhnnss\")"
    ],
    "answer": "D",
    "explanation": "Le format `yyyymmdd_hhnnss` assure un nom horodat√© unique compatible avec Excel."
  },
  {
    "question": "Quel code permet d'ajouter un champ 'Montant' en valeurs dans un TCD ?",
    "options": [
      "pt.AddField \"Montant\"",
      "pt.PivotFields(\"Montant\").Orientation = xlDataField",
      "pt.Fields(\"Montant\").Aggregate = Sum",
      "pt.AddDataField(\"Montant\")"
    ],
    "answer": "B",
    "explanation": "Pour d√©finir un champ de valeurs dans un TCD, il faut d√©finir `.Orientation = xlDataField` sur le champ."
  },
  {
    "question": "Quel code permet de tester si une valeur est num√©rique et non vide ?",
    "options": [
      "If IsNumeric(cell.Value)",
      "If cell.Value <> \"\"",
      "If Not IsEmpty(cell.Value) And IsNumeric(cell.Value)",
      "If IsNumber(cell.Value)"
    ],
    "answer": "C",
    "explanation": "La combinaison `Not IsEmpty` + `IsNumeric` garantit que la cellule est remplie et contient bien un nombre."
  },
  {
    "question": "Que fait le code suivant ?\n`Set ws = Sheets(\"Base\")`",
    "options": [
      "Supprime la feuille nomm√©e 'Base'",
      "Cr√©e une nouvelle feuille appel√©e 'Base'",
      "Cr√©e un raccourci vers la feuille nomm√©e 'Base'",
      "Active la feuille nomm√©e 'Base'"
    ],
    "answer": "C",
    "explanation": "`Set ws = Sheets(\"Base\")` signifie que `ws` est un alias vers cette feuille, mais ne l‚Äôactive pas automatiquement."
  },
  {
    "question": "Que fait ce code ?\n`If ws.AutoFilterMode Then ws.AutoFilterMode = False`",
    "options": [
      "Applique un filtre",
      "R√©initialise tout filtre actif sur la feuille",
      "V√©rifie s‚Äôil y a des filtres mais ne fait rien",
      "Active le filtre automatique"
    ],
    "answer": "B",
    "explanation": "Ce code d√©sactive tout filtre actif, ce qui est utile avant de poser de nouveaux crit√®res."
  },
  {
    "question": "Quel est le r√¥le de ce code ?\n`uniqueClients.Add val, CStr(val)` avec `On Error Resume Next`",
    "options": [
      "Ajoute tous les doublons dans la collection",
      "Ignore les erreurs pour √©viter les valeurs vides",
      "Ajoute uniquement les valeurs uniques dans une Collection",
      "Trie automatiquement les clients par nom"
    ],
    "answer": "C",
    "explanation": "L'utilisation de la valeur comme cl√© (`CStr(val)`) combin√©e √† l'ignorance des erreurs emp√™che les doublons."
  },
  {
    "question": "Quel est l‚Äôeffet de ce code ?\n`With ws.PageSetup: .Zoom = False: .FitToPagesWide = 1: End With`",
    "options": [
      "R√©duit le zoom d'affichage √† 1%",
      "Imprime sur une seule ligne verticale",
      "Adapte la feuille √† la largeur d'une page √† l'impression",
      "R√©initialise le zoom par d√©faut"
    ],
    "answer": "C",
    "explanation": "`FitToPagesWide = 1` limite l'impression √† une page de large, utile pour les tableaux horizontaux."
  },
  {
    "question": "Que fait ce code ?\n`MsgBox \"Reportings g√©n√©r√©s avec succ√®s !\", vbInformation`",
    "options": [
      "Affiche une erreur syst√®me",
      "Affiche un message avec ic√¥ne d'information",
      "Lance une bo√Æte de saisie",
      "Envoie un e-mail automatique"
    ],
    "answer": "B",
    "explanation": "`vbInformation` affiche une ic√¥ne bleue avec un message de confirmation utilisateur."
  },
  ]
};

// Timer
const Timer = ({ timeLeft }) => (
  <p className="timer">‚è≥ Temps restant : <span>{timeLeft}s</span></p>
);

// Composant QCM
const QuestionCard = ({ question, options, onAnswerClick, timeLeft }) => (
  <div className="question-card">
    <h4>üí° {question}</h4>
    <Timer timeLeft={timeLeft} />
    <div className="options-container">
      {options.map((option, index) => (
        <button key={index} onClick={() => onAnswerClick(option)} className="option-button">
          {index + 1}. {option}
        </button>
      ))}
    </div>
  </div>
);

// Composant Flashcard
const Flashcard = ({ slide, index, total }) => (
  <div className="question-card" style={{ fontSize: '14px', margin: '0' }}>
    {/* <h5>üß† Flashcard {index + 1} / {total}</h5> */}
    <strong>Question :</strong>
    <pre style={{ margin: '0', padding: '4px', background: '#f5f5f5', borderRadius: '3px', overflowX: 'auto' }}>
      <code style={{ fontFamily: 'monospace', whiteSpace: 'pre-wrap', lineHeight: '0.4' }}>
        {slide.question}
      </code>
    </pre>

<strong>R√©ponse :</strong>
<div className="answer-text answer-liste">
  {slide.answer}
</div>
  </div>
);




// Composant R√©sultat
const Results = ({ scores }) => {
  const totalScore = scores.moyen + scores.avance;
  const totalQuestions = Object.values(questions).flat().length;
  return (
    <div className="results">
      <h3>üéØ Score final : {totalScore} / {totalQuestions}</h3>
      <p>‚úÖ Niveau Moyen : {scores.moyen}</p>
      <p>‚úÖ Niveau Avanc√© : {scores.avance}</p>
      {totalScore > 3 ? (
        <h3 className="success">üöÄ Excellent travail ! Vous ma√Ætrisez bien les Produits !</h3>
      ) : (
        <p className="fail">üìö R√©visez encore un peu pour bien comprendre les concepts, ou retournez voir les flashcards !</p>
      )}
    </div>
  );
};

// Page principale
const Page2 = () => {
  const [level, setLevel] = useState("basic");
  const [currentSlide, setCurrentSlide] = useState(0);
  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [scores, setScores] = useState({ moyen: 0, avance: 0 });
  const [timeLeft, setTimeLeft] = useState(20);
  const [showResult, setShowResult] = useState(false);
  const [message, setMessage] = useState("");

  // Timer pour les niveaux QCM
  useEffect(() => {
    if (level !== "basic" && !showResult && timeLeft > 0) {
      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);
      return () => clearTimeout(timer);
    } else if (level !== "basic" && timeLeft === 0) {
      
    }
  }, [timeLeft, level, showResult]);

  // Slide auto pour les flashcards
  useEffect(() => {
    if (level === "basic" && !showResult) {
      const interval = setInterval(() => {
        setCurrentSlide((prev) => {
          if (prev + 1 < basicSlides.length) {
            return prev + 1;
          } else {
            setLevel("moyen");
            setCurrentQuestion(0);
            setTimeLeft(20);
            return 0;
          }
        });
      }, 10000);
      return () => clearInterval(interval);
    }
  }, [level, showResult]);

  const handleAnswerClick = (option) => {
    const currentQuestions = questions[level];
    const current = currentQuestions[currentQuestion];
    if (option === current.answer) {
      setScores((prevScores) => ({ ...prevScores, [level]: prevScores[level] + 1 }));
      setMessage("‚úÖ Correct !");
    } else {
      setMessage(`‚ùå Incorrect ! La bonne r√©ponse √©tait : ${current.answer}\n ‚ÑπÔ∏è ${current.explanation}`);
    }
    setTimeout(handleNextQuestion, 2500);
  };

  const handleNextQuestion = () => {
    const currentQuestions = questions[level];
    if (currentQuestion + 1 < currentQuestions.length) {
      setCurrentQuestion(currentQuestion + 1);
      setTimeLeft(20);
      setMessage("");
    } else {
      if (level === "moyen") {
        setLevel("avance");
      } else {
        setShowResult(true);
      }
      setCurrentQuestion(0);
      setTimeLeft(15);
      setMessage("");
    }
  };

  return (
    <div className="qcm-container">
      {showResult ? (
        <Results scores={scores} />
      ) : (
        <div>
          <h4 className="subtitle" style={{ fontSize: '10px', margin: '0' }}>
              OOP/Solid/Patron üîπ Niveau : {level.toUpperCase()}
          </h4>

          {level === "basic" ? (
            <Flashcard slide={basicSlides[currentSlide]} index={currentSlide} total={basicSlides.length} />
          ) : (
            <QuestionCard
              question={questions[level][currentQuestion].question}
              options={questions[level][currentQuestion].options}
              onAnswerClick={handleAnswerClick}
              timeLeft={timeLeft}
            />
          )}

          {message && <p className="message">{message}</p>}
        </div>
      )}
    </div>
  );
};

export default Page2;